<!DOCTYPE html>
<html lang="es">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>Tabla - Secretaría Técnica</title>
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css" />
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.0/font/bootstrap-icons.css" />
</head>
<body>
  <!-- Navbar -->
  <nav class="navbar navbar-expand-lg navbar-dark bg-primary">
    <div class="container-fluid px-2 py-2">
      <a class="navbar-brand" href="/tabla">Sistema de Secretaría Técnica</a>
      <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav">
        <span class="navbar-toggler-icon"></span>
      </button>
      <div class="collapse navbar-collapse" id="navbarNav">
        <ul class="navbar-nav ms-auto">
          <% if (user.isAdmin) { %>
            <li class="nav-item">
              <a class="nav-link" href="/tabla/admin">
                <i class="bi bi-gear-fill"></i> Agregar
              </a>
            </li>
          <% } %>
          <li class="nav-item">
            <a class="nav-link" href="/logout">
              <i class="bi bi-box-arrow-right"></i> Cerrar sesión (<%= user.username %>)
            </a>
          </li>
        </ul>
      </div>
    </div>
  </nav>

  <!-- Filtros -->
  <div class="container mt-4">
    <div class="card mb-4">
      <div class="card-header bg-light">
        <h5 class="mb-0">Filtrar Trabajadores</h5>
      </div>
      <div class="card-body">
        <form id="searchForm" action="/tabla/search" method="GET">
          <div class="row g-3">
            <div class="col-md-4">
              <label for="search_nombre" class="form-label">Nombre</label>
              <input type="text" class="form-control" id="search_nombre" name="nombre" value="<%= searchParams?.nombre || '' %>">
            </div>
            <div class="col-md-4">
              <label for="search_categoria" class="form-label">Categoría</label>
              <select class="form-select" id="search_categoria" name="categoria">
                <option value="">Todas las categorías</option>
                <% categorias.forEach(cat => { %>
                  <option value="<%= cat.id_categoria %>" <%= (searchParams?.categoria == cat.id_categoria) ? 'selected' : '' %>><%= cat.nombre %></option>
                <% }); %>
              </select>
            </div>
            <div class="col-md-4">
              <label for="search_grado" class="form-label">Grado Académico</label>
              <select class="form-select" id="search_grado" name="grado">
                <option value="">Todos los grados</option>
                <% grados.forEach(g => { %>
                  <option value="<%= g.id_grado %>" <%= (searchParams?.grado == g.id_grado) ? 'selected' : '' %>><%= g.nombre %></option>
                <% }); %>
              </select>
            </div>
          </div>
          <div class="mt-3 d-flex justify-content-end">
            <a href="/tabla" class="btn btn-secondary me-2">Limpiar filtros</a>
            <button type="submit" class="btn btn-primary"><i class="bi bi-search"></i> Buscar</button>
          </div>
        </form>
      </div>
    </div>
  </div>

  <!-- Tabla de trabajadores -->
  <div class="container mt-4">
    <div class="d-flex justify-content-between align-items-center mb-3">
      <h2>Lista de Trabajadores</h2>
      <% if (user.isAdmin) { %>
        <a href="/tabla/exportar" class="btn btn-success">
          <i class="bi bi-file-earmark-excel"></i> Exportar a Excel
        </a>
      <% } %>
    </div>
    <div class="table-responsive">
      <table class="table table-striped table-hover">
        <thead>
          <tr>
            <th>Núm. Trabajador</th>
            <th>Nombre</th>
            <th>Género</th>
            <th>Categoría</th>
            <th>Grado Académico</th>
            <th>Antigüedad UNAM</th>
            <th>Correo</th>
            <% if (user.isAdmin) { %>
              <th>RFC</th>
              <th>CURP</th>
              <th>Tel. Casa</th>
              <th>Celular</th>
              <th>Dirección</th>
              <th>Acciones</th>
            <% } %>
          </tr>
        </thead>
        <tbody>
          <% if (trabajadores.length > 0) { %>
            <% trabajadores.forEach(trabajador => { %>
              <tr>
                <td><%= trabajador.numero_trabajador %></td>
                <td><%= trabajador.nombre_completo %></td>
                <td><%= trabajador.genero === 'M' ? 'Masculino' : (trabajador.genero === 'F' ? 'Femenino' : 'Otro') %></td>
                <td><%= trabajador.categoria || 'No asignada' %></td>
                <td><%= trabajador.grado_academico || 'No asignado' %></td>
                <td><%= trabajador.antiguedad_unam || 0 %> años</td>
                <td><%= trabajador.email_institucional || '-' %></td>
                <% if (user.isAdmin) { %>
                  <td><%= trabajador.rfc || '-' %></td>
                  <td><%= trabajador.curp || '-' %></td>
                  <td><%= trabajador.telefono_casa || '-' %></td>
                  <td><%= trabajador.telefono_celular || '-' %></td>
                  <td><%= trabajador.direccion || '-' %></td>
                  <td>
                    <a href="/tabla/worker/edit/<%= trabajador.id_trabajador %>" class="btn btn-sm btn-warning me-1">
                      <i class="bi bi-pencil"></i>
                    </a>
                    <button onclick="confirmDelete(<%= trabajador.id_trabajador %>)" class="btn btn-sm btn-danger">
                      <i class="bi bi-trash"></i>
                    </button>
                  </td>
                <% } %>
              </tr>
            <% }); %>
          <% } else { %>
            <tr>
              <td colspan="<%= user.isAdmin ? 13 : 7 %>" class="text-center">No hay trabajadores registrados</td>
            </tr>
          <% } %>
        </tbody>
      </table>
    </div>
  </div>

  <!-- Gráficas -->
  <% if (user.isAdmin) { %>
    <div class="container mt-5">
      <div class="row">
        <div class="col-md-6 mb-4">
          <div class="card">
            <div class="card-header bg-light">
              <h5 class="mb-0 text-center">Por Categoría</h5>
            </div>
            <div class="card-body">
              <canvas id="graficaCategorias" width="300" height="300"></canvas>
            </div>
          </div>
        </div>
        <div class="col-md-6 mb-4">
          <div class="card">
            <div class="card-header bg-light">
              <h5 class="mb-0 text-center">Por Grado Académico</h5>
            </div>
            <div class="card-body">
              <canvas id="graficaGrados" width="300" height="300"></canvas>
            </div>
          </div>
        </div>
        <div class="col-md-6 mb-4">
          <div class="card">
            <div class="card-header bg-light">
              <h5 class="mb-0 text-center">Por Antigüedad UNAM</h5>
            </div>
            <div class="card-body">
              <canvas id="graficaAntiguedad" width="300" height="300"></canvas>
            </div>
          </div>
        </div>
        <div class="col-md-6 mb-4">
          <div class="card">
            <div class="card-header bg-light">
              <h5 class="mb-0 text-center">Por Género</h5>
            </div>
            <div class="card-body">
              <canvas id="graficaGenero" width="300" height="300"></canvas>
            </div>
          </div>
        </div>
      </div>
    </div>

    <!-- Script para las gráficas -->
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
      document.addEventListener('DOMContentLoaded', function () {
        // Colores para las gráficas
        const colores = [
          '#FF6384', '#36A2EB', '#FFCE56', '#4BC0C0', '#9966FF', 
          '#FF9F40', '#C9CBCF', '#7FBA00', '#00A4EF', '#F25022'
        ];

        // Convertir datos del backend al formato requerido
        const formatearDatos = (data) => {
          if (!data || !data.labels || !data.valores) return [];
          return data.labels.map((label, index) => ({
            nombre: label,
            genero: label,
            rango: label,
            total: data.valores[index]
          }));
        };

        // Obtener datos de las gráficas
        const generoData = formatearDatos(<%- JSON.stringify(generoData || null) %>);
        const categoriasData = formatearDatos(<%- JSON.stringify(graficaData || null) %>);
        const gradosData = formatearDatos(<%- JSON.stringify(gradosData || null) %>);
        const antiguedadData = formatearDatos(<%- JSON.stringify(antiguedadData || null) %>);

        // Función para crear gráfica de pastel
        function crearGrafica(elementId, data, etiquetaCampo, valorCampo, titulo) {
          const canvas = document.getElementById(elementId);
          if (!canvas) return;
          
          const ctx = canvas.getContext('2d');
          
          if (!data || data.length === 0) {
            console.warn(`No hay datos para la gráfica: ${titulo}`);
            ctx.clearRect(0, 0, canvas.width, canvas.height);
            
            // Mostrar mensaje cuando no hay datos
            ctx.font = '16px Arial';
            ctx.textAlign = 'center';
            ctx.fillStyle = '#666';
            ctx.fillText('No hay datos disponibles', canvas.width / 2, canvas.height / 2);
            return;
          }

          console.log(`Creando gráfica ${titulo} con datos:`, data);

          // Crear la gráfica
          new Chart(ctx, {
            type: 'pie',
            data: {
              labels: data.map(item => item[etiquetaCampo] || 'No especificado'),
              datasets: [{
                data: data.map(item => item[valorCampo]),
                backgroundColor: colores.slice(0, data.length)
              }]
            },
            options: {
              responsive: true,
              maintainAspectRatio: false,
              plugins: {
                legend: { 
                  position: 'bottom',
                  labels: {
                    boxWidth: 12,
                    padding: 10
                  }
                },
                title: { 
                  display: true, 
                  text: titulo,
                  font: {
                    size: 16
                  }
                },
                tooltip: {
                  callbacks: {
                    label: function(context) {
                      const label = context.label || '';
                      const value = context.raw || 0;
                      const dataset = context.dataset;
                      const total = dataset.data.reduce((acc, data) => acc + data, 0);
                      const percentage = Math.round((value / total) * 100);
                      return `${label}: ${value} (${percentage}%)`;
                    }
                  }
                }
              }
            }
          });
        }

        // Crear gráficas
        crearGrafica('graficaGenero', generoData, 'genero', 'total', 'Distribución por Género');
        crearGrafica('graficaCategorias', categoriasData, 'nombre', 'total', 'Distribución por Categoría');
        crearGrafica('graficaGrados', gradosData, 'nombre', 'total', 'Distribución por Grado Académico');
        crearGrafica('graficaAntiguedad', antiguedadData, 'rango', 'total', 'Distribución por Antigüedad');
      });
    </script>
  <% } %>

  <!-- Bootstrap JS y modal de confirmación -->
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.bundle.min.js"></script>
  <script>
    function confirmDelete(id) {
      if (confirm('¿Eliminar este trabajador permanentemente?')) {
        window.location.href = `/tabla/worker/delete/${id}`;
      }
    }
  </script>
</body>
</html>